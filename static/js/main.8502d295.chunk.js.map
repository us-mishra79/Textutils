{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toLocaleUpperCase","toLocaleLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","showAlert","split","join","length","defaultProps","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Capitalize","message","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8502d295.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                </li> */}\r\n               \r\n           \r\n              </ul>\r\n              {/* <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n              </form> */}\r\n              <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' : 'light'}`} >\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        \r\n           </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string}\r\n\r\nNavbar.defaultProps = {title: 'set Title here!'}","import React, {useState}from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"onClick was clicked\");\r\n        let newText  = text.toLocaleUpperCase()\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"onClick was clicked\");\r\n        let newText  = text.toLocaleLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleCopy =() => {\r\n        console.log('I\\'m copy');\r\n        let text = document.getElementById('myBox')\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\")\r\n    }\r\n    const handleOnChange =  (event) => {\r\n        // console.log(\"Onchange is fired\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleOnClear = () =>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+ /);\r\n        setText(newText.join(' '))\r\n    }\r\n    const emptyText= () => {\r\n        setText('')\r\n    }\r\n     const [text, setText] = useState(\"Enter your Text\");\r\n    return (\r\n        <div>\r\n            <div className=\"mb-3\" style= {{ color: props.mode==='light' ? '#042743' : 'white'}}>\r\n                <h1>{props.heading}</h1>\r\n                <textarea\r\n                 className=\"form-control\" value ={text}\r\n                 onClick={emptyText}\r\n                onChange = {handleOnChange}\r\n                style= {{backgroundColor: props.mode==='dark' ? 'gray' : 'white',\r\n                color: props.mode==='light' ? '#042743' : 'white'\r\n                        }}\r\n                id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleLoClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleOnClear}>Clear</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleExtraSpaces}>Remove extra space</button>\r\n        \r\n            <div className=\"container my-3\" style={{ color: props.mode==='light' ? '#042743' : 'white'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n                <p>{0.008*text.split(\" \").length} minutes need to take the whole paragraph</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length> 0? text: \"Enter Something to preview Here!\"}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const Capitalize =(word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n\r\n    return (\r\n       props.alert && <div>\r\n             <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{Capitalize(props.alert.type)} </strong> {props.alert.message}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500)\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark mode enabled\", \"success\")\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Light mode enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"usmishra\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      \n      {/* <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route> */}\n        {/* <Route path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter your text to analyze\" mode={mode} />\n        {/* </Route> */}\n      {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}